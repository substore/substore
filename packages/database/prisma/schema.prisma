generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id           Int    @id @default(autoincrement())
  providerType String @map("provider_type")
  providerId   String @map("provider_id")
}

model User {
  id           String         @id @default(uuid())
  name         String
  email        String         @unique
  github       String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
  Organization Organization[]
  stores       Store[]
}

model Store {
  id              String        @id @default(uuid())
  name            String        @unique
  type            StoreType
  url             String
  userId          String
  backupFrequency Int           @default(1440)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  organizationId  String?
  Organization    Organization? @relation(fields: [organizationId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  backups         Backup[]
}

model Backup {
  id        String    @id @default(uuid())
  url       String
  storeId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  name      String
  store     Store     @relation(fields: [storeId], references: [id])
}

model Organization {
  id          String   @id @default(uuid())
  name        String
  description String?
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       User     @relation(fields: [ownerId], references: [id])
  stores      Store[]
}

enum StoreType {
  REDIS
  MONGODB
  POSTGRESQL
  MYSQL
  KAFKA
  RABBITMQ
}
